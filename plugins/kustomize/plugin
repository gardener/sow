#!/usr/bin/env bash
#
# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0


source "$SOWLIB/pluginutils"

set -eo pipefail

getRequiredValue path "path" PLUGINCONFIGJSON # path to root directory of kustomize repo
getRequiredValue kustomization "kustomization" PLUGINCONFIGJSON # path to directory containing kustomization.yaml file, relative to $path
getValueList kustomize_flags_deploy "flags.deploy" PLUGINCONFIGJSON
getValueList kustomize_flags_delete "flags.delete" PLUGINCONFIGJSON

fullpath="$path/$kustomization"
if [[ ! -f "$fullpath/kustomization.yaml" ]]; then
    fail "kustomization.yaml not found in directory '$fullpath'"
fi

deploy() {
    info "Running kustomize build $fullpath ..."
    exec_cmd_override "kustomize build \"$fullpath\" $(echo "${kustomize_flags_deploy[@]}")"
}

delete() {
    info "Running kustomize build $fullpath ..."
    exec_cmd_override "kustomize build \"$fullpath\" $(echo "${kustomize_flags_delete[@]}")"
}

# workaround - exec_cmd can't be used since it uses 'echo' (in verbose mode), which interferes with the pipe.
exec_cmd_override() {
    local cmd="$1"
    if [ -n "$VERBOSE" ]; then
        echo "$cmd"
    fi
    eval $(echo "$cmd") > "$dir/manifest.yaml"
}

case "$1" in
    deploy) deploy "$@";;
    delete) delete "$@";;
    *) fail "unsupported action $1"
esac
