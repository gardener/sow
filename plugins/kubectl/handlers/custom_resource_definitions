# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0


action_deploy_CustomResourceDefinition_apiextensions_k8s_io()
{
  exec_cmd kubectl --kubeconfig "$3" apply -f "$4" 
  local res
  if [ -z "$DRYRUN" ]; then
    while [ "$res" != True ]; do
      res="$(kubectl --kubeconfig "$3" get crd "$1" -o jsonpath='{..status.conditions[?(@.type=="Established")].status}')"
      if [ "$res" != True ]; then
        info "waiting for resource being established"
        sleep 1
      fi
    done
  fi
}

action_delete_CustomResourceDefinition_apiextensions_k8s_io() {
    objs="$(kubectl --kubeconfig "$3" get --all-namespaces "$1" -o json | jq ".items | length")"
    if [ $objs -eq 0 ]; then
      if [[ ${1: -15} == ".gardener.cloud" ]]; then
        debug "CRD is in 'gardener.cloud' group, checking for deletion-protected annotation ..."
        if [[ $(kubectl --kubeconfig "$3" get crd "$1" -o json | jq -r '.metadata.labels["gardener.cloud/deletion-protected"]') == "true" ]]; then
          verbose "Annotate crd to enable deletion ..."
          exec_cmd kubectl --kubeconfig "$3" annotate crd "$1" "confirmation.gardener.cloud/deletion=true" --overwrite
        fi
      fi
      exec_cmd kubectl --kubeconfig "$3" delete crd "$1" --wait=false
    else
      warn "preserving custom resource definition $1 because of still existing objects"
    fi
}
