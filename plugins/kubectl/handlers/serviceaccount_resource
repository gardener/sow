# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0


action_deploy_ServiceAccount_core() {
  exec_cmd kubectl --kubeconfig "$3" apply -f "$4"
  create_kubeconfig_for_sa "$@"
}

action_delete_ServiceAccount_core() {
  create_kubeconfig_for_sa "$@"
  exec_cmd kubectl --kubeconfig "$3" delete -f "$4"
}

# create kubeconfig for serviceaccount
create_kubeconfig_for_sa() {
  local token
  local kconfig
  if [ -z "$DRYRUN" ]; then
    token="$(kubectl --kubeconfig "$3" -n "$2" get secret $(kubectl --kubeconfig "$3" -n "$2" get sa "$1" -o jsonpath={.secrets[0].name}) -o jsonpath={.data.token} | base64 -d)"
    verbose "Writing kubeconfig with serviceaccount token to '$dir/sa_$1.kubeconfig'"
    cat > "$dir/sa_$1.kubeconfig" << EOF
---
apiVersion: v1
kind: Config
current-context: cluster
contexts:
- context:
    cluster: cluster
    user: $1
  name: cluster
clusters:
- cluster:
$(spiff merge $3 --path=.clusters.$(spiff merge $3 --path=.current-context).cluster | indent 4)
  name: cluster
users:
- name: $1
  user:
    token: $token
EOF
  fi
}

# reads from stdin and indents everything by the given number of spaces (default 2)
indent() {
  local ind=${1:-2}
  local prefix=""
  for i in $(seq 1 $ind); do
    prefix=" $prefix"
  done;
  while read line ; do
    echo "$prefix$line"
  done
}